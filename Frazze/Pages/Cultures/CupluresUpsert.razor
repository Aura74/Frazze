@page "/cultures/create"
@page "/cultures/edit/{id:int}"
@using Microsoft.AspNetCore.Components
@using Frazze_DataAccess
@inject ICulturesRepository _cultureRepository
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Culture</h3>

    <div class="col-10">
    @if (IsLoading)
    {
        <div class="text-center">
            <img src="/images/loading.gif">
        </div>
    }
    else{
            <EditForm Model="CultureCode" OnValidSubmit="UpsertCulture">
            <div class="form-group">
                
                <label>Land</label>
                    <InputText @bind-Value="CultureCode.Culture" class="form-control"></InputText>
                
                <label>Datum</label>
                    <InputDate @bind-Value="CultureCode.created" class="form-control"></InputDate>
            </div>

            <div class="form-group py-2">
                <button class="btn btn-primary">@Title</button>
                    <NavLink href="application" class="btn btn-secondary"> Back to Index</NavLink>
            </div>
        </EditForm>
    }
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private CulturesDTO CultureCode { get; set; } = new CulturesDTO();
    private string Title { get; set; } = "Create";

    public bool IsLoading { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id==0)
            {
    //create
                IsLoading=false;
            }
            else
            {
    //update
                Title="Update";
                await LoadPh();
            }
        }
    }

    private async Task LoadPh()
    {
        IsLoading=true;
        StateHasChanged();
        CultureCode = await _cultureRepository.Get(Id);
        IsLoading=false;
        StateHasChanged();
    }

    public async Task UpsertCulture()
    {
        if (CultureCode.CultureID==0)
        {
            //create
            await _cultureRepository.Create(CultureCode);
            await _jsRuntime.ToastrSuccess("Språk created successfully.");
        }
        else
        {
            //update
            await _cultureRepository.Update(CultureCode);
            await _jsRuntime.ToastrSuccess("Språk updated successfully.");
        }
        _navigationManager.NavigateTo("cultures");
    }
}