@page "/pages"
@inject IPagesRepository _pageRepository
@inject IJSRuntime _jsRuntime

<_DeleteConfirmation IsParentComponentProcessing="IsLoading" ConfirmationChanged="ConfirmDelete_Click"></_DeleteConfirmation>

<div class="row mt-4">
    <div class="col-6">
        <h4 class="card-title text-primary">Page-Listan</h4>
    </div>
    <div class="col-4 offset-2">
        <a href="pages/create" class="btn btn-primary form-control"><i class="bi bi-plus-lg"></i> Add New Page </a>
    </div>
    
    <div class="col-12 p-3">
        @if (Pages.Any())
        {
            <table class="table table-bordered">
                <thead>
                <tr>
                    <th>Id</th>
                    <th>PageName</th>
                    <th>Created</th>
                    <th>ApplicationName</th>
                    <th>Knappar</th>
                </tr>
                </thead>
                <tbody>
                    @foreach (var objp in Pages)
                {
                    <tr>
                        <td>
                            @objp.ID
                        </td> 
                        <td>
                            @objp.PageName
                        </td> 
                        <td>
                            @objp.created
                        </td> 
                        <td>
                            @objp.Application.ApplicationName
                        </td> 

                            <td>
                                <NavLink href="@($"pages/edit/{objp.ID}")" class="btn-primary btn"><i class="bi bi-pencil"></i> Edit</NavLink>

                                    <button class="btn btn-danger" @onclick="()=>HandleDelete(objp.ID)"><i class="bi bi-trash"></i> Delete</button>
                            </td>
                    </tr>
                }
                </tbody>
            </table>
        }
        
        else
        {
            if (IsLoading)
            {
                //loading gif
                <div class="text-center">
                    <img src="/images/loading.gif">
                </div>
            }
            else
            {
                //no records
                <p>No recrods found.</p>
            }
        }
        </div>
</div>

@code {
    private IEnumerable<PagesDTO> Pages { get; set; } = new List<PagesDTO>();
    public bool IsLoading { get; set; }
    private int DeletePageId { get; set; } = 0;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadPh();
        }
    }
    private async Task LoadPh()
    {
        IsLoading=true;
        StateHasChanged();
        Pages = await _pageRepository.GetAll();
        IsLoading=false;
        StateHasChanged();
    }

    private void HandleDelete(int id)
    {
        DeletePageId=id;
        _jsRuntime.InvokeVoidAsync("ShowDeleteConfirmationModal");
    }

    public async Task ConfirmDelete_Click(bool isConfirmed)
    {
        IsLoading=true;
        if (isConfirmed && DeletePageId!=0)
        {
            await Task.Delay(200);
    //delete
            await _pageRepository.Delete(DeletePageId);
            await LoadPh();
            await _jsRuntime.InvokeVoidAsync("HideDeleteConfirmationModal");
        }
        IsLoading=false;
    }
}